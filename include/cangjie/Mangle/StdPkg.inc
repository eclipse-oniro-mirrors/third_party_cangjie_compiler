// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
// This source file is part of the Cangjie project, licensed under Apache-2.0
// with Runtime Library Exception.
//
// See https://cangjie-lang.cn/pages/LICENSE for license information.

// The Cangjie API is in Beta. For details on its capabilities and limitations, please refer to the README file.

/**
 * @file
 *
 * This file lists mangling name map of std package.
 */
#ifndef STD_PKG
#define STD_PKG
{
    {"std.ad", "aa"},
    {"std.sync", "ab"},
    {"std.collection", "ac"},
    {"std.deriving", "ad"},
    {"std.database", "ae"},
    {"std.net", "af"},
    {"std.chirad", "ag"},
    {"std.io", "ah"},
    {"std.convert", "ai"},
    {"std.ffi", "aj"},
    {"std.argopt", "ak"},
    {"std.objectpool", "al"},
    {"std.reflect", "am"},
    {"std.fs", "an"},
    {"std.runtime", "ao"},
    {"std.overflow", "ap"},
    {"std.unittest", "aq"},
    {"std.binary", "ar"},
    {"std.unicode", "as"},
    {"std.core", "at"},
    {"std.console", "au"},
    {"std.random", "av"},
    {"std.sort", "aw"},
    {"std.ast", "ax"},
    {"std.env", "ay"},
    {"std.process", "ba"},
    {"std.time", "bb"},
    {"std.regex", "bc"},
    {"std.posix", "bd"},
    {"std.crypto", "be"},
    {"std.ref", "bf"},
    {"std.math", "bg"},
    {"std.collection.concurrent", "bh"},
    {"std.collection.concurrent.native", "bi"},
    {"std.deriving.impl", "bj"},
    {"std.deriving.builtins", "bk"},
    {"std.deriving.api", "bl"},
    {"std.deriving.resolve", "bm"},
    {"std.database.sql", "bn"},
    {"std.net.native", "bo"},
    {"std.convert.native", "bq"},
    {"std.objectpool.native", "bs"},
    {"std.fs.native", "bt"},
    {"std.runtime.native", "bu"},
    {"std.unittest.mock", "bv"},
    {"std.unittest.testmacro", "bw"},
    {"std.unittest.prop_test", "bx"},
    {"std.unittest.common", "by"},
    {"std.unittest.native", "ca"},
    {"std.unittest.diff", "cb"},
    {"std.unittest.mock.mockmacro", "cc"},
    {"std.unittest.mock.internal", "cd"},
    {"std.core.native", "ce"},
    {"std.random.native", "cf"},
    {"std.ast.native", "cg"},
    {"std.env.native", "ch"},
    {"std.process.native", "ci"},
    {"std.time.native", "cj"},
    {"std.regex.native", "ck"},
    {"std.posix.native", "cl"},
    {"std.crypto.digest", "cm"},
    {"std.crypto.cipher", "cn"},
    {"std.math.numeric", "co"},
    {"std.math.native", "cp"},
    {"std.math.numeric.native", "cq"},
}
#endif