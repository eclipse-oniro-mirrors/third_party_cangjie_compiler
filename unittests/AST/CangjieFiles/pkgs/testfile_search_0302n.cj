// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
// This source file is part of the Cangjie project, licensed under Apache-2.0
// with Runtime Library Exception.
//
// See https://cangjie-lang.cn/pages/LICENSE for license information.

package pkgs

func run(): Int64 {
    var day: Time = Time()
    day.foo(5)
    var a: Student<Int32> = Student<Int32>(1)
    var v2: Int8 = 2
    var v3: Int16 = 3
    var v4: Int32 = 4
    let x: Int8 = chooseOne(a, b, c, d)
    var i: Float16 = 6.104e-5
    var time = Time<Float16>.Day(i)
    var res = match (time) {
        case Day(x) => x
    }

    return 0
}

open class Time <: Day {
    override func foo(x: Int32) { //此处override的是父类实现的接口中的函数，不是父类重写的函数
        print("Time")
    }
}

abstract class Day <: Fruit {
    override func foo(x: Int32) {
        print("Day")
    }
    func aoo(x: Int32): Int32
}

interface Fruit {
    func foo(x: Int32) {
        print("Fruit")
    }
}

class Monday <: Time {
    let m: Int32
    init(x: Int32) {
        m = x
    }
}

class Tuesday <: Time {
    let m: Int32
    init(x: Int32) {
        m = x + 1
    }
}

struct abcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxy {}

var Dey: Int64 = 6
var Day: Int32 = 5
var a: Day = Day() // 此处Day的name有3个：定义的类型Day，引用Day，和访问Day()

func Day(x: Monday, y: Tuesday): Int32 {
    return x.m + y.m
}

class Day {
    var x: Int32 = 1
    var y: Int32 = 2
    var z: String = """
func Day(x:Monday,y:Tuesday):Int32{
        return x.m + y.m
}"""
    func Tuesday(a: Int32, b: Int32): Int32 {
        var m: Int32 = a * 2
        var n: Int32 = b * 2
        return Monday().Time(m + n)
    }
}

struct Student<K> {
    var s: K
    init(x: K) {
        s = x
    }
}

enum TimeUnit {
    Year(Int32)
}

var time = TimeUnit.Year(2020)
var res: Int32 = match (time) {
    case Year(x) => x
}

enum Time<T> {
    Day(T)
}
